[tool.poetry]
name = "sdp-metadata-schema"
version = "0.1.0"
description = ""
authors = ["msinclair2 <msinclair2>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
pydantic = "^2.11.3"
bson = "^0.5.10"


[tool.poetry.group.dev.dependencies]
ruff = "^0.11.5"
mypy = "^1.15.0"

[tool.poetry.scripts]
update-json-versions = "update_versions:walk_and_update_versions"

[tool.ruff]
target-version = "py312"
fix = false
lint.select = [
    "E", # pycodestyle
    "W", # pycodestyle
    "F", # Pyflakes
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "D", # flake8-docstrings
    "I", # isort
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "Q", # flake8-quotes
    "UP", # pyupgrade
    #"PT", # flake8-pytest-style
    "RUF", # Ruff-specific rules,
    "ERA", # eradicate,
    "T20", # flamke8-print
    "N", # pep8-naming
    "Q", # flake8-quotes
]

lint.ignore = [
    "D100", # missing docstring in public module
    "D101", # missing docstring in public class
    "D102", # missing docstring in public method
    "D103", # missing docstrinc in public function
    "D104", # missing docstring public package
    "D105", # missing docstring in magic method
    "D106", # missing docstring in public nested class
    "D107", # missing docstring in __init__
    "D203", # one-blank-line-before-class
    "D204", # no-blank-line-before-class
    "D205", #
    "D401",
    "UP015",
    "D404",
    "D417",
    "D213", # multi-line-summary-second-line
    "E501", # Line too long
    "ERA001",
    "B008"

]

[tool.mypy]
plugins = [
    "pydantic.mypy"
]

mypy_path = "./pydantic"
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
disallow_untyped_defs = true
disallow_untyped_calls = true
check_untyped_defs = true
strict_optional = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
